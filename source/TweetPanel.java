
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import twitter4j.StatusUpdate;
import twitter4j.TwitterException;
import twitter4j.User;

/**
 *
 * @author BuckYoung
 */
public class TweetPanel extends javax.swing.JPanel {

    private long replyID;

    /**
     * Creates new form TweetPanel
     */
    public TweetPanel() {
        initComponents();

        charCount.setText("140");
        invalidTweet.setVisible(false);
        ReplyButton.setVisible(false);
        sentLabel.setVisible(false);
        setUsernameAndPic();
        //set panel to visible
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tweetBox = new javax.swing.JTextArea();
        tweetButton = new javax.swing.JButton();
        charCount = new javax.swing.JLabel();
        invalidTweet = new javax.swing.JLabel();
        ReplyButton = new javax.swing.JButton();
        sentLabel = new javax.swing.JLabel();
        pic = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bitlyButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(160, 200, 240));
        setMaximumSize(new java.awt.Dimension(350, 380));
        setMinimumSize(new java.awt.Dimension(350, 380));
        setPreferredSize(new java.awt.Dimension(350, 380));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tweetBox.setBackground(new java.awt.Color(200, 240, 250));
        tweetBox.setColumns(20);
        tweetBox.setLineWrap(true);
        tweetBox.setRows(5);
        tweetBox.setWrapStyleWord(true);
        tweetBox.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        tweetBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tweetBoxKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tweetBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tweetBoxKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tweetBox);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 223, -1));

        tweetButton.setText("Tweet");
        tweetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tweetButtonActionPerformed(evt);
            }
        });
        add(tweetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 240, -1));

        charCount.setText("140");
        add(charCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        invalidTweet.setForeground(new java.awt.Color(200, 0, 0));
        invalidTweet.setText("Invalid Tweet: Too Many Characters.");
        add(invalidTweet, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));

        ReplyButton.setText("Reply");
        ReplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReplyButtonActionPerformed(evt);
            }
        });
        add(ReplyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        sentLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        sentLabel.setText("Reply Sent!");
        add(sentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, -1, -1));

        pic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pic.setPreferredSize(new java.awt.Dimension(48, 48));
        pic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                picMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                picMouseEntered(evt);
            }
        });
        add(pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        username.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        username.setText("UserName:");
        add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(240, 244, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setToolTipText("Shorten Your URL!");
        jPanel1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        bitlyButton.setBackground(new java.awt.Color(200, 240, 250));
        bitlyButton.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        bitlyButton.setText("Shrink Link");
        bitlyButton.setBorder(null);
        bitlyButton.setBorderPainted(false);
        bitlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bitlyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(bitlyButton);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, 110, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void tweetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tweetButtonActionPerformed
        if (tweetBox.getText().length() <= 140) {

            try {

                Twitty401.twitter.updateStatus(tweetBox.getText());

                tweetBox.setText(null);
                charCount.setText("140");
            } catch (TwitterException ex) {
                Logger.getLogger(TweetPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            invalidTweet.setVisible(true);
        }


    }//GEN-LAST:event_tweetButtonActionPerformed

    private void tweetBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tweetBoxKeyTyped
//UNEEDED     
    }//GEN-LAST:event_tweetBoxKeyTyped

    private void tweetBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tweetBoxKeyPressed
//UNEEDED      
    }//GEN-LAST:event_tweetBoxKeyPressed

    private void tweetBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tweetBoxKeyReleased
        recalculateCharCount();
    }//GEN-LAST:event_tweetBoxKeyReleased

    private void ReplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReplyButtonActionPerformed
        if (tweetBox.getText().length() <= 140) {
            try {
                StatusUpdate status = new StatusUpdate(tweetBox.getText());
                status.inReplyToStatusId(replyID);
                Twitty401.twitter.updateStatus(status);
                tweetBox.setText(null);
                charCount.setText("140");
                ReplyButton.setVisible(false);
                sentLabel.setVisible(true);
            } catch (TwitterException ex) {
                Logger.getLogger(TweetPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            invalidTweet.setVisible(true);
        }

    }//GEN-LAST:event_ReplyButtonActionPerformed

    private void picMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picMouseClicked
        try {
            Timeline.createTimeline(Timeline.Type.USER, Twitty401.twitter.showUser(Twitty401.twitter.getId()), null); //load their timeline
        } catch (TwitterException ex) {
            Logger.getLogger(TweetPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalStateException ex) {
            Logger.getLogger(TweetPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_picMouseClicked

    //shortens URL 
    private void bitlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bitlyButtonActionPerformed
        if (tweetBox != null) {
            MainGUI.setWaiting();
            tweetBox.setText(URLLogic.parseAndShorten(tweetBox.getText()));
            recalculateCharCount();
            MainGUI.setDoneWaiting();
        }
    }//GEN-LAST:event_bitlyButtonActionPerformed

    private void picMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picMouseEntered
        pic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    }//GEN-LAST:event_picMouseEntered

    private void picMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picMouseExited
        pic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
    }//GEN-LAST:event_picMouseExited
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReplyButton;
    private javax.swing.JButton bitlyButton;
    private javax.swing.JLabel charCount;
    private javax.swing.JLabel invalidTweet;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pic;
    private javax.swing.JLabel sentLabel;
    private javax.swing.JTextArea tweetBox;
    private javax.swing.JButton tweetButton;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables

    private void setUsernameAndPic() {
        //User name and picture!
        User user;
        try {
            user = Twitty401.twitter.showUser(Twitty401.twitter.getId());
            //Set Pic (callout):
            pic.setIcon(UserIconLogic.getIcon(user, UserIconLogic.Size.NORMAL));
            //Set Username:
            username.setText(user.getScreenName() + ":");
        } catch (TwitterException ex) {
            Logger.getLogger(TweetPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*
     * Used to create a TweetPanel (from home)
     */
    public static void createTweetPanel() {
        TweetPanel tweetPanel = new TweetPanel();
        MainGUI.resetMainPanel();
        MainGUI.addToMainPanel(tweetPanel);
        MainGUI.repaintMainPanel();
    }

    /*
     * Used to create a TweetPanel (for reply)
     */
    public static void createTweetPanel(User user, long tweetID) {
        TweetPanel tweetPanel = new TweetPanel();
        tweetPanel.setReplyInfo(user.getScreenName(), tweetID);
        MainGUI.resetMainPanel();
        MainGUI.addToMainPanel(tweetPanel);
        MainGUI.repaintMainPanel();
    }

    /*
     * Used to create a TweetPanel (for tweet@)
     */
    public static void createTweetPanel(User user) {
        TweetPanel tweetPanel = new TweetPanel();
        tweetPanel.setTweetAtInfo(user.getScreenName());
        MainGUI.resetMainPanel();
        MainGUI.addToMainPanel(tweetPanel);
        MainGUI.repaintMainPanel();
    }

    //sets the stage for tweet@ 
    private void setTweetAtInfo(String screenName) {
        tweetBox.setText("@" + screenName + " ");
        recalculateCharCount();
    }

    /*
     * sets the text box and character counters
     */
    public void setReplyInfo(String screenName, long tweetID) {
        tweetBox.setText("@" + screenName + " ");
        recalculateCharCount();
        tweetButton.setVisible(false);
        ReplyButton.setVisible(true);
        replyID = tweetID;
    }

    /*
     * manipulates charCount JLabel
     */
    private void recalculateCharCount() {

        //Keeps char count
        int charNum = 140 - tweetBox.getText().length();
        if (charNum < 0) {
            charCount.setForeground(Color.red);
        } else {
            charCount.setForeground(Color.black); //this sucks, checks every time a key is pressed.
            invalidTweet.setVisible(false);
        }
        charCount.setText("" + charNum);        // TODO add your handling code here:

    }
}
