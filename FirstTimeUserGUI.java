
import java.awt.Desktop;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author BuckYoung
 */
public class FirstTimeUserGUI extends javax.swing.JFrame {
    //This should not change in the forseeable future:

    private static final int TWITTER_PIN_LENGTH = 7;

    /**
     * Creates new form FirstTimeUserGUI
     */
    public FirstTimeUserGUI() {
        initComponents();
        ClearButton.setVisible(false);
        PinStatus.setVisible(false);
        URLHelper.setVisible(false);
        URLTextField.setVisible(false);
        PinButtonStatus.setVisible(false);
        twittyIcon.setIcon(Twitty401.logo);
        setVisible(true);
    }
    //call to same window location

    public FirstTimeUserGUI(Point point) {
        initComponents();
        ClearButton.setVisible(false);
        PinStatus.setVisible(false);
        URLHelper.setVisible(false);
        URLTextField.setVisible(false);
        PinButtonStatus.setVisible(false);
        this.setLocation(point);
        twittyIcon.setIcon(Twitty401.logo);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        GetPinButton = new javax.swing.JButton();
        PinTextField = new javax.swing.JTextField();
        oAuthButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ClearButton = new javax.swing.JButton();
        PinStatus = new javax.swing.JLabel();
        PinButtonStatus = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        twittyIcon = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        URLHelper = new javax.swing.JLabel();
        URLTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Twitty401");
        setBackground(new java.awt.Color(200, 240, 250));
        setBounds(new java.awt.Rectangle(0, 22, 350, 500));
        setMinimumSize(new java.awt.Dimension(350, 480));
        setResizable(false);
        setSize(new java.awt.Dimension(350, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GetPinButton.setText("Get PIN!");
        GetPinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getPinButtonPressed(evt);
            }
        });
        getContentPane().add(GetPinButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 300, -1));

        PinTextField.setText("(Click to Paste)");
        PinTextField.setToolTipText("Ctrl+V to Paste (CMD+V on Mac)");
        PinTextField.setMaximumSize(new java.awt.Dimension(108, 28));
        PinTextField.setMinimumSize(new java.awt.Dimension(108, 28));
        PinTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PinTextFieldMouseClicked(evt);
            }
        });
        PinTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(PinTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, -1, -1));
        PinTextField.getAccessibleContext().setAccessibleName("");
        PinTextField.setSize(108, 28);

        oAuthButton.setText("Authenticate");
        oAuthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oAuthButtonActionPerformed(evt);
            }
        });
        getContentPane().add(oAuthButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 300, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("1)");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 20, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("2) Paste PIN here:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, 20));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("3)");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 20, -1));

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(ClearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 60, -1));
        ClearButton.getAccessibleContext().setAccessibleName("ClearButton");

        PinStatus.setForeground(new java.awt.Color(200, 0, 0));
        PinStatus.setText("< Invalid PIN >");
        getContentPane().add(PinStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, 100, -1));

        PinButtonStatus.setText("Hidden status update");
        getContentPane().add(PinButtonStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, -1));

        jPanel1.setBackground(new java.awt.Color(160, 200, 240));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        twittyIcon.setBackground(new java.awt.Color(200, 240, 250));
        twittyIcon.setFont(new java.awt.Font("Lucida Handwriting", 0, 24)); // NOI18N
        twittyIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        twittyIcon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        twittyIcon.setOpaque(true);
        jPanel1.add(twittyIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 350, 80));
        twittyIcon.getAccessibleContext().setAccessibleName("Welcome");

        jPanel2.setBackground(new java.awt.Color(200, 240, 250));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("You must authenticate with Twitter.com");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, 20));
        jLabel2.getAccessibleContext().setAccessibleName("instructions");

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 350, 240));

        URLHelper.setText("Copy this URL into your browser:");
        jPanel1.add(URLHelper, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, -1, -1));

        URLTextField.setText("hidden URL text field");
        URLTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                URLTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(URLTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 330, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
     * Opens browser or, if unsupported will display URL and instructions
     */
    private void getPinButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getPinButtonPressed
        URI uri = null;
        PinStatus.setVisible(false); //resets this (unrelated mostly)
        try {
            OAuth.getRequestTokens();
            uri = new URI(OAuth.REQUEST_TOKEN.getAuthenticationURL());
            if (Desktop.isDesktopSupported()) {
                try {
                    Desktop.getDesktop().browse(uri);
                    PinButtonStatus.setText(" [ opening browser... ] ");
                    PinButtonStatus.setVisible(true);
                } catch (IOException e) { /* TODO: error handling */ }
            } else { /* TODO: error handling */
                //ONLY IF NOT SUPPORTED
                URLHelper.setVisible(true);
                URLTextField.setVisible(true);
                URLTextField.setText(OAuth.REQUEST_TOKEN.getAuthenticationURL());
                URLTextField.setCaretPosition(0);
            }
        } catch (UnknownHostException ex) {
        } catch (URISyntaxException exc) {
            Logger.getLogger(FirstTimeUserGUI.class.getName()).log(Level.SEVERE, null, exc);
        } catch (NullPointerException npe) {
        }



    }//GEN-LAST:event_getPinButtonPressed

    /*
     * AutoPastes clipboard into textarea if the text is considered transferable
     * Does all sorts of magic if the pasted text is 7 characters long
     */
    private void PinTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PinTextFieldMouseClicked
        String pin = null;
        PinStatus.setVisible(false);
        PinButtonStatus.setVisible(false);

        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

        Transferable contents = clipboard.getContents(null);
        boolean hasTransferableText;
        hasTransferableText = (contents != null) && contents.isDataFlavorSupported(DataFlavor.stringFlavor);

        if (hasTransferableText) {
            try {
                pin = (String) contents.getTransferData(DataFlavor.stringFlavor);
            } catch (UnsupportedFlavorException exc) {
                Logger.getLogger(FirstTimeUserGUI.class.getName()).log(Level.SEVERE, null, exc);
            } catch (IOException exc) {
                Logger.getLogger(FirstTimeUserGUI.class.getName()).log(Level.SEVERE, null, exc);
            }
        }
        if (pin.length() == TWITTER_PIN_LENGTH) {
            PinTextField.setText(pin);
            PinTextField.setEditable(false);
            ClearButton.setVisible(true);
            PinTextField.setSize(108, 24);

        } else {
            PinTextField.setSize(108, 24);
        }

        PinTextField.setSize(108, 24);
    }//GEN-LAST:event_PinTextFieldMouseClicked

    /*
     * attempts to authorize with twitter, using PIN... and creates new SignIn GUI
     */
    private void oAuthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oAuthButtonActionPerformed
        try {
            if (OAuth.requestAccessTokens(PinTextField.getText(0, TWITTER_PIN_LENGTH))) { //if reqATokens is a success
                Twitty401.createSIGUI(this.getLocation()); //CREATS NEW GUI

            } else { //else if it is a failure

                PinStatus.setVisible(true); //DISPLAYS "INVALID PIN"

            }
        } catch (BadLocationException exc) {
            Logger.getLogger(FirstTimeUserGUI.class.getName()).log(Level.SEVERE, null, exc);
            PinStatus.setVisible(true);

        } finally {
            PinTextField.setSize(108, 24);
        }
    }//GEN-LAST:event_oAuthButtonActionPerformed

    /*
     * clears the pin field and makes it editable again
     */
    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        PinTextField.setText(null);
        ClearButton.setVisible(false);
        PinTextField.setEditable(true);
        PinTextField.setText("(Click to Paste)");
        PinStatus.setVisible(false);
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void PinTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinTextFieldActionPerformed
    }//GEN-LAST:event_PinTextFieldActionPerformed

    private void URLTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_URLTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_URLTextFieldActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton GetPinButton;
    private javax.swing.JLabel PinButtonStatus;
    private javax.swing.JLabel PinStatus;
    private javax.swing.JTextField PinTextField;
    private javax.swing.JLabel URLHelper;
    private javax.swing.JTextField URLTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JButton oAuthButton;
    private javax.swing.JLabel twittyIcon;
    // End of variables declaration//GEN-END:variables
}
